/* Generated by JTB 1.4.5 */
package EDU.purdue.jtb.syntaxtree;

import EDU.purdue.jtb.visitor.*;

/**
 * JTB node class for the production AFancyProduction:<br>
 * Corresponding grammar :<br>
 * try {<br>
 * f0 -> ( #0 ( Annotation() )*<br>
 * .. .. . #1 ( %0 LabeledStatement()<br>
 * .. .. . .. | %1 AssertStatement()<br>
 * .. .. . .. | %2 Block()<br>
 * .. .. . .. | %3 EmptyStatement()<br>
 * .. .. . .. | %4 $0 StatementExpression() $1 ";"<br>
 * .. .. . .. | %5 SwitchStatement()<br>
 * .. .. . .. | %6 TryStatement() )<br>
 * .. .. . #2 [ MarkerAnnotation() ] )<br>
 * }<br>
 * catch (Name() < IDENTIFIER >) Block()<br>
 * catch (Name() < IDENTIFIER >) Block()<br>
 * finally Block()<br>
 */
public class AFancyProduction implements INode {

  /** A child node */
  public NodeSequence f0;

  /** The serial version uid */
  private static final long serialVersionUID = 145L;

  /**
   * Constructs the node with its child node.
   *
   * @param n0 the child node
   */
  public AFancyProduction(final NodeSequence n0) {
    f0 = n0;
  }

  /**
   * Accepts the IRetArguVisitor visitor.
   *
   * @param <R> the user return type
   * @param <A> the user argument type
   * @param vis the visitor
   * @param argu a user chosen argument
   * @return a user chosen return information
   */
  public <R, A> R accept(final IRetArguVisitor<R, A> vis, final A argu) {
    return vis.visit(this, argu);
  }

  /**
   * Accepts the IRetVisitor visitor.
   *
   * @param <R> the user return type
   * @param vis the visitor
   * @return a user chosen return information
   */
  public <R> R accept(final IRetVisitor<R> vis) {
    return vis.visit(this);
  }

  /**
   * Accepts the IVoidArguVisitor visitor.
   *
   * @param <A> the user argument type
   * @param vis the visitor
   * @param argu a user chosen argument
   */
  public <A> void accept(final IVoidArguVisitor<A> vis, final A argu) {
    vis.visit(this, argu);
  }

  /**
   * Accepts the IVoidVisitor visitor.
   *
   * @param vis the visitor
   */
  public void accept(final IVoidVisitor vis) {
    vis.visit(this);
  }

}
